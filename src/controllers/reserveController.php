<?phpnamespace controllers;include '../models/reservation.php';class reserveController{   public function createReservation():void   {       // handel the validation form for inputs       $client = $_POST['clientId'];       $Fields = [           'ReservationDate' => 'Reservation Date is required',           'Time' => 'Time is required',           'EventType' => 'Event Type is required',            'Reference' => 'Reference is required',            'contactNumber' => 'Contact is required',            'address' => 'address is required',            'fullName' => 'Full Name is required',             'email' => 'Email is required',       ];       $data = [];       $error = [];         foreach ($Fields as $field => $value){              if (empty($_POST[$field])){                $error[$field] = $value;              }else{                $data[$field] = htmlspecialchars($_POST[$field]) ;              }         }       // handle the image upload       $image = $_FILES['image'];       $fileDirectory = '../proofPaymentUpload/';       if ($image && !empty($image['name'])){           $fileInfo = pathinfo($image['name']);           $fileExtension = strtolower($fileInfo['extension']);           $fileName = uniqid('proofPayment_').'.'.$fileExtension;           $uploadPath = $fileDirectory . $fileName;           if (!move_uploaded_file($image['tmp_name'], $uploadPath)){               $data['success'] = false;               $data['message'] = 'Failed to upload image';               echo json_encode($data);               return;           }           $data['image'] = $fileName; // store the image name in the database       }       if (empty($image['name'])){           $error['image'] = 'Image is required';       }       if (!empty($error)){ // if there is an error              $data['success'] = false;              $data['errors'] = $error;              echo json_encode($data);             return;         }       // store the data in the database        $reservation = new \models\reservation();         $reservation->store($data['ReservationDate'], $data['Time'], $data['EventType'], $data['fullName'], $data['contactNumber'], $data['address'], $client, $data['image'], $data['Reference'],$data['email']);   }}if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action'])){    $reserve = new reserveController();    switch ($_POST['action']){        case 'reserve':            $reserve->createReservation();            break;        default:            echo "Method is not allowed";    }}