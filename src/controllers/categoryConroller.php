<?phpnamespace controllers;use models\category;require_once '../models/category.php';class categoryConroller{   public function store():void   {       $categoryName = htmlspecialchars($_POST['categoryName']);       if(empty($categoryName)){           echo json_encode(['success' => false, 'message' => 'categoryName is Required']);           return;       }       $category = new category();       $category->store($categoryName);   }    public function show():void    {        $category = new category();        $status = 'Active';        $TableTr = '';        $data = $category->showAll($status);        if ($data){            foreach ($data as $catData) {                $TableTr .= '              <tr>                 <th>'.$catData['cateId'].'</th>                  <td>'.$catData['categoryName'].'</td>                  <td>'.$catData['status'].'</td>                  <td>                  <button id="btn_updateCategory" value="'.$catData['cateId'].'" class="btn btn-primary">Edit</button>                   <button id="btn_ArchiveCategory" value="'.$catData['cateId'].'" class="btn btn-danger">Archive</button>                 </td>           </tr>          ';            }            echo $TableTr;        }    }    public function showCategoryOnSelect():void //showCategoryOnSelect    {        $category = new category();        $status = 'Active';        $Select = '';        $data = $category->showAll($status);        if ($data){            foreach ($data as $row) {                $Select .= '               <option style="color:  #000" value="'.$row['categoryName'].'">'.$row['categoryName'].'</option>          ';            }        }else{            echo $Select .=' <option value="1">No Category Available</option>';        }        echo $Select;    }    public function showCategoryById():void    {        $Id = $_POST['id'];        $category = new category();        $data = $category->showById($Id);        $modal = '';        if ($data){            foreach ($data as $row) {              $modal .= '                 <!-- Modal for adding products -->                    <form class="modal fade updateCategoryForm" id="category_modal_'.$row['cateId'].'" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">                        <div class="modal-dialog modal-dialog-centered">                            <div class="modal-content">                                <div style="background-color: #660ff1" class="modal-header">                                    <h5 class="modal-title text-light" id="staticBackdropLabel">Update Category</h5>                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>                                </div>                                <div class="modal-body">                                    <div class="form-floating mb-3">                                        <input type="text" value="'.$row['categoryName'].'" name="categoryName" class="form-control" id="categoryName" placeholder="categoryName">                                        <label for="categoryName">Category Name</label>                                    </div>                                    <input type="hidden" name="id" value="'.$row['cateId'].'">                                </div>                                <div class="modal-footer">                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>                                    <button style="background-color: #660ff1" type="submit" class="btn text-light">Save Changes</button>                                </div>                            </div>                        </div>                    </form>              ';            }            echo $modal;        }    }    public function update():void //updateCategory    {        $categoryName = htmlspecialchars($_POST['categoryName']);        $id = $_POST['id'];        if(empty($categoryName)){            echo json_encode(['success' => false, 'message' => 'categoryName is Required']);            return;        }        $category = new category();        $category->Update($categoryName,$id);    }    public function archive():void    {        $id = $_POST['id'];        $category = new category();        $category->archive($id);    }}if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action'])){    $category =  new categoryConroller();    switch ($_POST['action']){        case 'store':            $category->store();            break;        case 'showToSelect':            $category->showCategoryOnSelect();            break;        case 'selectById':            $category->showCategoryById();            break;        case 'update':            $category->update();            break;        case 'archive':            $category->archive();            break;        default:            echo "Method Not Allowed";            break;    }}