<?phpnamespace controllers;use models\category;require_once '../models/category.php';class categoryConroller{   public function store():void   {       $categoryName = htmlspecialchars($_POST['categoryName']);       if(empty($categoryName)){           echo json_encode(['success' => false, 'message' => 'categoryName is Required']);           return;       }       $category = new category();       $category->store($categoryName);   }    public function show():void    {        $category = new category();        $status = 'Active';        $TableTr = '';        $data = $category->showAll($status);        if ($data){            foreach ($data as $catData) {                $TableTr .= '              <tr>                 <th>'.$catData['cateId'].'</th>                  <td>'.$catData['categoryName'].'</td>                  <td>'.$catData['status'].'</td>                  <td>                  <button value="'.$catData['cateId'].'" class="btn btn-primary">Edit</button>                   <button  value="'.$catData['cateId'].'" class="btn btn-danger">Archive</button>                 </td>           </tr>          ';            }            echo $TableTr;        }    }    public function showCategoryOnSelect():void    {        $category = new category();        $status = 'Active';        $Select = '';        $data = $category->showAll($status);        if ($data){            foreach ($data as $row) {                $Select .= '               <option style="color:  #000" value="'.$row['categoryName'].'">'.$row['categoryName'].'</option>          ';            }        }else{            echo $Select .=' <option value="1">No Category Available</option>';        }        echo $Select;    }}if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action'])){    $category =  new categoryConroller();    switch ($_POST['action']){        case 'store':            $category->store();            break;        case 'showToSelect':            $category->showCategoryOnSelect();            break;        default:            echo "Method Not Allowed";            break;    }}