<?phpnamespace models;use config\Connection;use http\Message\Body;require_once '../config/Connection.php';class reservation extends Connection{  public function store(string $date, string $time, string $eventType, string $Name, string $contact, string $Address, int $clientId, string $proofPayment, string $Reference,string $email):void  {      $conn = $this->Connect();      $query = "INSERT INTO reservation(Date, time, eventType, Name, contact, Address, clientId, proofPayment, Reference,email) VALUES(?,?,?,?,?,?,?,?,?,?)";      $stmt = $conn->prepare($query);      $stmt->bind_param("ssssssisss", $date, $time, $eventType, $Name, $contact, $Address, $clientId, $proofPayment, $Reference,$email);      if ($stmt->execute()) {          echo json_encode(['success' => true, 'message' => 'Reservation has been successfully added']);      } else {          echo "Error: " . $query . "<br>" . $conn->error;      }        $stmt->close();        $conn->close();  }  public function checkIfBookingIsAlreadyExist(int $clientId):bool  // to avoid duplication of the booking  {      $query = "      SELECT * FROM reservation        WHERE status = 'Pending'          AND clientId = ?      ";      $conn = $this->Connect();      $stmt = $conn->prepare($query);      $stmt->bind_param('i',$clientId);      $stmt->execute();      $result = $stmt->get_result();      if ($result->num_rows > 0){          return true;      }else{          return false;      }  }    public function checkIfDateIsAlreadyBooked($date):bool// DATE CHECKER  IF THE DATE IS ALREADY Booked    {        $conn = $this->Connect();        $query = "SELECT * FROM reservation WHERE Date = ?";        $stmt = $conn->prepare($query);        $stmt->bind_param('s',$date);        $stmt->execute();        $result = $stmt->get_result();        if ($result->num_rows > 0){            return true;        }else{            return false;        }    }    // show reservation List    public function show():array    {        $conn = $this->Connect();        $result = $conn->query("SELECT * FROM reservation");        $data = [];        if ($result->num_rows > 0){            while ($row = $result->fetch_assoc()){                $data[] = $row;            }            return $data;        }        return [];    }}