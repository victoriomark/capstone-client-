<?phpnamespace models;use config\Connection;require_once '../config/Connection.php';class cart extends Connection{   public function store(string $productName, int $total, int $pax,string $image,int $productId,$clientId):void   {       $conn = $this->connect();        $query = "INSERT INTO cart(productName, total, NumberOfPax, image,productId,clientId) VALUES(?,?,?,?,?,?)";        $stmt = $conn->prepare($query);        $stmt->bind_param('sdisii', $productName, $total, $pax, $image, $productId, $clientId);        if ($stmt->execute()) {            echo json_encode(['success'=> true,'message'=>'Product added to cart']);        } else {            echo "Error: " . $query . "<br>" . $this->connect()->error;        }        $stmt->close();        $this->connect()->close();   }   public function checkIfProductIsAlreadyExistInCart($id,$clientId):bool   {       $conn = $this->connect();       $query = "SELECT * FROM cart WHERE productId = ? AND clientId = ?";       $stmt = $conn->prepare($query);         $stmt->bind_param('ii', $id, $clientId);            $stmt->execute();            $stmt->store_result();            $num_rows = $stmt->num_rows;            if ($num_rows > 0) {                return true;            }            return false;   }   public function showToCart($clientId):array   {       $conn = $this->connect();       $query = "SELECT * FROM cart WHERE clientId = ?";       $stmt = $conn->prepare($query);         $stmt->bind_param('i', $clientId);            $stmt->execute();            $result = $stmt->get_result();            $cart = [];            if ($result->num_rows > 0) {                while ($row = $result->fetch_assoc()) {                    $cart[] = $row;                }                return $cart;            }            return [];   }   public function RemoveItemBaseOnId($cartId):bool // remove item from cart   {       $conn = $this->connect();       $query =   "DELETE FROM cart WHERE id = ?";       $stmt = $conn->prepare($query);       $stmt->bind_param('i', $cartId);         if ($stmt->execute()) {              return true;         } else {             return false;         }   }    public function RemoveItemBaseOnClientId($clientId):void    {        $conn = $this->connect();        $query =   "DELETE FROM cart WHERE clientId = ?";        $stmt = $conn->prepare($query);        $stmt->bind_param('i', $clientId);        $stmt->execute();    }}